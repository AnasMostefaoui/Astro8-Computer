#AS

///////////////
// Variables //
///////////////
define $pixOffset = 61439 // Beginning of video memory
define $charOffset = 16382 // Beginning of character memory

define $CursorMoveSpeed = 15000
define $cursorCount = 0
define $cursorX = 32
define $cursorY = 32

define $drawSpeed = 10000
define $drawCount = 0
define $drawType = 1 // 0 = nothing, 1 = sand, 2 = water

define $waterColor = 3484
define $sandColor = 0b110111011101110

change @EX = 168

change $lastKey = 168

define $bufferALoc = 20000
define $bufferBLoc = 24096

#Start
// Set default UI
change 16382 = 's'
change 16383 = 'a'
change 16384 = 'n'
change 16385 = 'd'
change 16386 = 0


#MainLoop

if $drawCount==$drawSpeed:

    // Process all of the pixels to calculate their next position
    change $copyOffset = 0
    #Processor
    add $bufferALoc,$copyOffset -> $loc1
    add $bufferBLoc,$copyOffset -> $loc2


    change $currentPixel = *$loc1
    if $currentPixel==0: // Only process pixels with something in them
        add 1,$copyOffset -> $copyOffset
        goto #Processor
    endif
    if $loc1>24032: // Only process pixels that aren't in the bottom layer
        goto #EndofProcessLoop
    endif

    // Handle sand type
    if $currentPixel==$sandColor:
        // Calculate next position
        add $loc1,64 -> $loc1
        change $pixelVal1 = *$loc1
        if $pixelVal1==0: // If the pixel below this one is empty
            change *$loc2 = 0
            add $bufferBLoc,$copyOffset -> $loc2
            add $loc2,64 -> $loc2
            change *$loc2 = $currentPixel
        endif
        if $pixelVal1==$waterColor: // If the pixel below this one is water, then fall through it
            change *$loc2 = $waterColor
            add $bufferBLoc,$copyOffset -> $loc2
            add $loc2,64 -> $loc2
            change *$loc2 = $currentPixel
        endif
        if $pixelVal1!=0: // If the pixel below this one is full
            // Check if bottom-left pixel is empty
            sub $loc1,1 -> $loc1
            if *$loc1==0:
                change *$loc2 = 0
                add $bufferBLoc,$copyOffset -> $loc2
                add $loc2,63 -> $loc2
                change *$loc2 = $currentPixel
                goto #EndofProcessLoop
            endif
            // Check if bottom-right pixel is empty
            add $loc1,2 -> $loc1
            if *$loc1==0:
                change *$loc2 = 0
                add $bufferBLoc,$copyOffset -> $loc2
                add $loc2,65 -> $loc2
                change *$loc2 = $currentPixel
                goto #EndofProcessLoop
            endif
        endif
    endif
    // Handle water type
    if $currentPixel==$waterColor:
        // Calculate next position
        add $loc1,64 -> $loc1
        change $pixelVal1 = *$loc1
        if $pixelVal1==0: // If the pixel below this one is empty
            change *$loc2 = 0
            add $bufferBLoc,$copyOffset -> $loc2
            add $loc2,64 -> $loc2
            change *$loc2 = $currentPixel
        endif
        if $pixelVal1!=0: // If the pixel below this one is full
            // Check if bottom-left pixel is empty
            sub $loc1,1 -> $loc1
            if *$loc1==0:
                change *$loc2 = 0
                add $bufferBLoc,$copyOffset -> $loc2
                add $loc2,63 -> $loc2
                change *$loc2 = $currentPixel
                goto #EndofProcessLoop
            endif
            // Check if bottom-right pixel is empty
            add $loc1,2 -> $loc1
            if *$loc1==0:
                change *$loc2 = 0
                add $bufferBLoc,$copyOffset -> $loc2
                add $loc2,65 -> $loc2
                change *$loc2 = $currentPixel
                goto #EndofProcessLoop
            endif
            // Check if right pixel is empty
            sub $loc1,64 -> $loc1
            if *$loc1==0:
                add $loc2,1 -> $loc2
                if *$loc2==0:
                    add $bufferBLoc,$copyOffset -> $loc2
                    change *$loc2 = 0
                    add $loc2,1 -> $loc2
                    change *$loc2 = $currentPixel
                endif
                goto #EndofProcessLoop
            endif
            // Check if left pixel is empty
            sub $loc1,2 -> $loc1
            if *$loc1==0:
                sub $loc2,1 -> $loc2
                if *$loc2==0:
                    add $bufferBLoc,$copyOffset -> $loc2
                    change *$loc2 = 0
                    sub $loc2,1 -> $loc2
                    change *$loc2 = $currentPixel
                endif
                goto #EndofProcessLoop
            endif
        endif
    endif
    
    #EndofProcessLoop
    add 1,$copyOffset -> $copyOffset
    gotoif $copyOffset<4096, #Processor




    // Copies everything from buffer B into buffer A
    change $copyOffset = 0
    #Copier
    add $bufferALoc,$copyOffset -> $loc1
    add $bufferBLoc,$copyOffset -> $loc2
    
    change *$loc1 = *$loc2

    add $pixOffset,$copyOffset -> $pixLoc
    change *$pixLoc = *$loc2

    add 1,$copyOffset -> $copyOffset
    gotoif $copyOffset<4096, #Copier
    

    
    ///////////////////////
    // Draw cursor color //
    ///////////////////////
    // Get center pixel
    mult $cursorY,64 -> $temp
    add $cursorX,$temp -> $temp
    change $bufCoord = $temp
    add $pixOffset,$temp -> $temp
    // Left crosshair
    sub $temp,2 -> $temp
    change *$temp = 65535
    sub $temp,1 -> $temp
    change *$temp = 65535
    // Right crosshair
    add $temp,5 -> $temp
    change *$temp = 65535
    add $temp,1 -> $temp
    change *$temp = 65535
    // Top crosshair
    sub $temp,3 -> $temp
    sub $temp,128 -> $temp
    change *$temp = 65535
    sub $temp,64 -> $temp
    change *$temp = 65535
    // Bottom crosshair
    add $temp,320 -> $temp
    change *$temp = 65535
    add $temp,64 -> $temp
    change *$temp = 65535

    change $drawCount = 0
endif

if $CursorMoveSpeed==$cursorCount:

    ////////////////////////
    // Clear cursor color //
    ////////////////////////
    // Get center pixel
    mult $cursorY,64 -> $temp
    add $cursorX,$temp -> $temp
    add $pixOffset,$temp -> $temp
    // Left crosshair
    sub $temp,2 -> $temp
    change *$temp = 0
    sub $temp,1 -> $temp
    change *$temp = 0
    // Right crosshair
    add $temp,5 -> $temp
    change *$temp = 0
    add $temp,1 -> $temp
    change *$temp = 0
    // Top crosshair
    sub $temp,3 -> $temp
    sub $temp,128 -> $temp
    change *$temp = 0
    sub $temp,64 -> $temp
    change *$temp = 0
    // Bottom crosshair
    add $temp,320 -> $temp
    change *$temp = 0
    add $temp,64 -> $temp
    change *$temp = 0

    change $keypress = @EX

    if $keypress=='w':
        if $cursorY>3:
            sub $cursorY,1 -> $cursorY
        endif
    endif
    if $keypress=='s':
        if $cursorY<60:
            add $cursorY,1 -> $cursorY
        endif
    endif
    if $keypress=='a':
        if $cursorX>3:
            sub $cursorX,1 -> $cursorX
        endif
    endif
    if $keypress=='d':
        if $cursorX<60:
            add $cursorX,1 -> $cursorX
        endif
    endif

    if $keypress=='o':
        if $keypress!=$lastKey:
            add $drawType,1 -> $drawType
            if $drawType==3:
                change $drawType = 0
            endif
            if $drawType==0:
                change 16382 = 'n'
                change 16383 = 'o'
                change 16384 = 'n'
                change 16385 = 'e'
                change 16386 = 0
            endif
            if $drawType==1:
                change 16382 = 's'
                change 16383 = 'a'
                change 16384 = 'n'
                change 16385 = 'd'
                change 16386 = 0
            endif
            if $drawType==2:
                change 16382 = 'w'
                change 16383 = 'a'
                change 16384 = 't'
                change 16385 = 'e'
                change 16386 = 'r'
            endif
        endif
    endif
    #ExitIf

    if $keypress!=$lastKey:
        change $lastKey = $keypress
    endif

    ///////////////////////
    // Draw cursor color //
    ///////////////////////
    // Get center pixel
    mult $cursorY,64 -> $temp
    add $cursorX,$temp -> $temp
    change $bufCoord = $temp
    add $pixOffset,$temp -> $temp
    // Draw the correct particle
    if $drawType==1:
        add $bufferALoc,$bufCoord -> $bufCoord
        change *$bufCoord = $sandColor
    endif
    if $drawType==2:
        add $bufferALoc,$bufCoord -> $bufCoord
        change *$bufCoord = $waterColor
    endif
    // Left crosshair
    sub $temp,2 -> $temp
    change *$temp = 65535
    sub $temp,1 -> $temp
    change *$temp = 65535
    // Right crosshair
    add $temp,5 -> $temp
    change *$temp = 65535
    add $temp,1 -> $temp
    change *$temp = 65535
    // Top crosshair
    sub $temp,3 -> $temp
    sub $temp,128 -> $temp
    change *$temp = 65535
    sub $temp,64 -> $temp
    change *$temp = 65535
    // Bottom crosshair
    add $temp,320 -> $temp
    change *$temp = 65535
    add $temp,64 -> $temp
    change *$temp = 65535

    change $cursorCount = 0
endif



#EndOfMainLoop

add 1,$cursorCount -> $cursorCount
add 1,$drawCount -> $drawCount
goto #MainLoop

