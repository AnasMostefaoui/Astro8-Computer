#AS

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This program will draw a ball which rapidly bounces between the walls and ceiling using simple rect collision //
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#start

// General
change $pixOffset = 61439 // Beginning of video memory
change @EX = 168 // 'Zero' out keypresses
change $slowTime = 0

// Ball
change $ballVelX = 1 // 0 = left, 1 = right
change $ballVelY = 1 // 0 = down, 1 = up
change $ballPosX = 32 // x-position
change $ballPosY = 15 // y-position (higher posY = lower screenY)
change $lastlastposition = 65534
//change $ballPosition = 2048 // Offset from $pixOffset, position of ball


#update

change $keypress = @EX

// Slow down time
if $slowTime==2000:

    // Bounce if on left/right walls
    if $ballPosX==0: // If on left wall, switch x-direction
        change $ballVelX = 1
    endif
    if $ballPosX==63: // If on right wall, switch x-direction
        change $ballVelX = 0
    endif

    // Bounce if on top/bottom walls
    if $ballPosY==0: // If on top wall, switch y-direction
        change $ballVelY = 0
    endif
    if $ballPosY==63: // If on bottom wall, switch y-direction
        change $ballVelY = 1
    endif



    // Calculate next ball X-position
    if $ballVelX==1:
        add $ballPosX,1 -> $ballPosX
    endif
    if $ballVelX==0:
        sub $ballPosX,1 -> $ballPosX
    endif

    // Calculate next ball Y-position
    if $ballVelY==1:
        sub $ballPosY,1 -> $ballPosY
    endif
    if $ballVelY==0:
        add $ballPosY,1 -> $ballPosY
    endif

    // Convert X and Y coordinates into pixel space
    change $ballPixelPosition = 0
    mult $ballPosY,64 -> $ballPixelPosition
    add $ballPosX,$ballPixelPosition -> $ballPixelPosition

    // Calculate correct address and display Ball
    change *$lastlastposition = 0 // Clear last-last position
    change $lastlastposition = $ballMemoryPosition
    change *$ballMemoryPosition = 16912 // fade last position
    add $ballPixelPosition,$pixOffset -> $ballMemoryPosition
    change *$ballMemoryPosition = 65534 // Color new position

    change $slowTime = 0
endif

add $slowTime,1 -> $slowTime

// Keep looping
goto #update