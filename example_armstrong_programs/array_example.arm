#AS

// array $arr, 15 // Initialize array with a size of 15

// change $arr[1] = 5

// // Use another variable as the array index
// change $index = 14
// change $arr[$index] = 1

// Assembly version of above ^
asm"
    , array $arr, 15
    , Allocate memory 16528 - 16543, store beginning (16528) and size (15) in ArmArr


    , change $arr[1] = 5
    ldia 5
    stlge
    , (calculate ArmArr.beginning + 1 ($arr index))
    here 16529


    , change $index = 14
    ldia 14
    stlge
    here 16544


    , change $arr[$index] = 1
    ldlge
    here 16544
    , load $index into @B
    swp             
    ldw
    , load array beginning into @A
    here 16528     
    , add to get actual memory address of $arr[$index]
    add       
    , load 1 into @B ( = 1)
    ldib 1         
    , store @B into the address stored in @A
    staout       
"




// array $arr, 15 // Initialize array with a size of 15

// change $arr[1] = 5

// // Use another variable as the array index
// change $index = 14
// change $arr[$index] = 4000

// Assembly version of above ^
asm"
    , array $arr, 15
    , Allocate memory 16528 - 16543, store beginning (16528) and size (15) in ArmArr


    , change $arr[1] = 5
    ldia 5
    stlge
    , (calculate ArmArr.beginning + 1 ($arr index))
    here 16529  


    , change $index = 14
    ldia 14
    stlge
    here 16544


    , change $arr[$index] = 1
    ldlge
    here 16544
    , load $index into @B
    swp             
    ldw
    , load array beginning into @A
    here 16528     
    , add to get actual memory address of $arr[$index] into @A
    add          
    swp
    ldw
    , load 4000 into @A ( = 1)
    here 4000      
    swp
    , store @B into the address stored in @A
    staout       
"